{"version":3,"sources":["action/cards.js","components/Pages.js","components/App.js","reducers/pages.js","reducers/configStore.js","store/store.js","index.js"],"names":["REQUEST_DATA","SUCCESS_DATA","Pages","onBtnClock","props","getCard","partingCards","arrCards","allCards","arr","map","index","key","className","src","image","original_url","alt","name","width","height","deck","publisher","console","log","this","charactersCard","isFetch","length","onClick","Component","App","getData","connect","store","api","dispatch","choice","count","type","payload","require","get","then","response","data","results","initialState","allReducers","combineReducers","state","action","createStore","applyMiddleware","thunk","logger","ReactDOM","render","document","getElementById"],"mappings":"+OAAaA,EAAe,eACfC,EAAe,e,gBCsEbC,E,4MA3DXC,WAAa,WACT,EAAKC,MAAMC,QAAQ,S,EAGvBC,aAAe,SAACC,GAEZ,IAAIC,GADJD,EAAWA,EAASE,KACIC,KAAI,SAACC,EAAOC,GAAR,OAC5B,sBAAeC,UAAU,iBAAzB,UACI,qBAAKC,IAAKH,EAAMI,MAAMC,aAAcC,IAAKN,EAAMO,KAAMC,MAAM,OAAOC,OAAO,UACzE,6BAAKT,EAAMO,OACX,4BAAIP,EAAMU,OACV,4BAAIV,EAAMW,UAAUJ,SAJdN,MAOV,OADAW,QAAQC,IAAIhB,GACLA,G,kEAlBPiB,KAAKrB,MAAMC,QAAQ,OAAQ,M,+BAqBrB,IAAD,EACmBoB,KAAKrB,MAAMsB,eAA3BjB,EADH,EACGA,IAAKkB,EADR,EACQA,QACb,GAAIA,EACA,OACI,8BACI,mFAGL,IAAIA,EAAS,CAEhB,GAAIlB,EAAImB,OAAS,EAEb,OACI,qBAAKf,UAAU,kBAAf,SACK,mBAAMP,aAAN,CAAmBG,IAAKA,MAInC,GAAmB,IAAfA,EAAImB,OACN,OACI,gCACI,8NACA,wBAAQC,QAASJ,KAAKtB,WAAtB,4E,GA9CJ2B,aCEdC,E,uKAEO,IACDC,EAAYP,KAAKrB,MAAjB4B,QACR,OACE,qBAAKnB,UAAU,MAAf,SACE,cAAC,EAAD,CAAOa,eAAgBD,KAAKrB,MAAMsB,eAAgBrB,QAAS2B,U,GANjDF,aAwBHG,eAVS,SAAAC,GACtB,MAAO,CACLR,eAAgBQ,EAAMC,QAIC,SAAAC,GAAQ,MAAK,CACtCJ,QAAS,SAACK,EAAQC,GAAT,OAAmBF,EFzBvB,SAAiBC,EAAQC,GAC5B,OAAO,SAAAF,GACHb,QAAQC,IAAIa,EAAQC,EAAO,gBAC3BF,EAAS,CACPG,KAAMvC,EACNwC,QAASH,IAGGI,EAAQ,IAChBC,IAAI,yGAAyGJ,EAAM,gBACxHK,MAAK,SAAAC,GACFR,EAAS,CACLG,KAAMtC,EACNuC,QAASI,EAASC,KAAKC,cEYAd,CAAQK,EAAQC,QAGxCL,CAA8CF,G,gCC7BvDgB,EAAe,CACjBtC,IAAK,GACLkB,SAAS,EACTU,OAAQ,I,ICFCW,GAAcC,EAFCR,EAAQ,GAA5BQ,iBAEmC,CACvCd,IDIG,WAAoD,IAA7Be,EAA4B,uDAAtBH,EAAcI,EAAQ,uCACtD,OAAQA,EAAOZ,MACX,KAAKvC,EACD,OAAO,2BACAkD,GADP,IACcvB,SAAQ,EAAMU,OAAQ,SAExC,KAAKpC,EACD,OAAO,2BACAiD,GADP,IAEIzC,IAAK0C,EAAOX,QACZb,SAAS,EACTU,OAAQ,KAEhB,QACI,OAAOa,M,EElBsBT,EAAQ,GAIpCP,GAAQkB,E,EAJbA,aAIyBJ,GAAaK,E,EAJzBA,iBAIyCC,IAAOC,MCDrEC,IAASC,OACP,cAAC,IAAD,CAAUvB,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFwB,SAASC,eAAe,W","file":"static/js/main.932272ff.chunk.js","sourcesContent":["export const REQUEST_DATA = 'REQUEST_DATA'\r\nexport const SUCCESS_DATA = 'SUCCESS_DATA'\r\n\r\nexport function getData(choice, count) {\r\n    return dispatch => {\r\n        console.log(choice, count, \"this getData\")\r\n        dispatch({\r\n          type: REQUEST_DATA,\r\n          payload: choice,\r\n        })\r\n\r\n        const axios = require('axios');\r\n        axios.get(\"https://comicvine.gamespot.com/api/characters/?api_key=ba11ebe1e047e96f96ba3660f8a73c38421e2c1e&limit=\"+count+\"&format=json\")\r\n        .then(response => {\r\n            dispatch({\r\n                type: SUCCESS_DATA,\r\n                payload: response.data.results\r\n            })\r\n        })\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport \"./css/Page.css\"\r\n\r\n\r\n\r\nclass Pages extends Component {\r\n    \r\n    componentDidMount() {\r\n        this.props.getCard(\"Load\", 34)\r\n    }\r\n    \r\n\r\n    onBtnClock = () => {\r\n        this.props.getCard(\"Load\")\r\n    }\r\n\r\n    partingCards = (arrCards) => {\r\n        arrCards = arrCards.arr\r\n        let allCards = arrCards.map((index, key) => \r\n        <div key={key} className=\"grid-card card\">\r\n            <img src={index.image.original_url} alt={index.name} width=\"auto\" height=\"256px\"/>\r\n            <h1>{index.name}</h1>\r\n            <p>{index.deck}</p>\r\n            <p>{index.publisher.name}</p>\r\n        </div>)\r\n        console.log(allCards)\r\n        return allCards\r\n    }\r\n\r\n    render() {\r\n        const { arr, isFetch} = this.props.charactersCard\r\n        if (isFetch) {\r\n            return (\r\n                <div>\r\n                    <p>Загрузка</p>\r\n            </div>\r\n            )\r\n        } else if(!isFetch) {\r\n            \r\n            if (arr.length > 0) {\r\n                \r\n                return (\r\n                    <div className=\"grid grid-table\">\r\n                        {<this.partingCards arr={arr}/>}\r\n\r\n                    </div>\r\n                )\r\n            } if (arr.length === 0) {\r\n                return(\r\n                    <div>\r\n                        <h1>Что-то пошло не так, нажмите на кнопку</h1>\r\n                        <button onClick={this.onBtnClock}>Загрузить</button>\r\n                    </div>\r\n                )\r\n            }\r\n            // else {\r\n            //     return (\r\n            //         <div>\r\n            //             <button onClick={this.onBtnClock}>Загрузить</button>\r\n            //         </div>\r\n            //     )\r\n            // }\r\n            \r\n        }\r\n        \r\n        \r\n        \r\n        \r\n    }\r\n}\r\n\r\nexport default Pages;","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { getData } from '../action/cards';\n\nimport './css/App.css';\nimport Pages from './Pages';\n\nclass App extends Component {\n\n  render () {\n    const { getData } = this.props\n    return (\n      <div className=\"App\">\n        <Pages charactersCard={this.props.charactersCard} getCard={getData}/>\n      </div>\n    );\n  }\n  \n}\n\n\nconst mapStateToProps = store => {\n  return {\n    charactersCard: store.api\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getData: (choice, count) => dispatch(getData(choice, count))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps) (App);\n","import { REQUEST_DATA, SUCCESS_DATA } from \"../action/cards\"\r\n\r\nconst initialState = {\r\n    arr: [],\r\n    isFetch: false,\r\n    choice: \"\"\r\n}\r\n\r\nexport function pagesReducers(state=initialState, action) {\r\n    switch (action.type) {\r\n        case REQUEST_DATA:\r\n            return {\r\n                ...state, isFetch:true, choice: \"load\"\r\n            }\r\n        case SUCCESS_DATA:\r\n            return {\r\n                ...state,\r\n                arr: action.payload,\r\n                isFetch: false,\r\n                choice: \"\",\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {pagesReducers} from './pages'\r\nconst { combineReducers } = require(\"redux\");\r\n\r\nexport const allReducers = combineReducers({\r\n    api: pagesReducers\r\n})","import logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\nimport { allReducers } from \"../reducers/configStore\";\r\n\r\nconst { createStore, applyMiddleware } = require(\"redux\");\r\n\r\n\r\n\r\nexport const store = createStore(allReducers, applyMiddleware(thunk, logger));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}